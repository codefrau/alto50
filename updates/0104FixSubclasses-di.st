'Should now support adding instvars with subclasses in use'Class understands: 'fieldsString [myinstvars]' classified: 'As yet unclassified'Class derstands: fields.Class understands: 'declareString | t1 t2  	[t1 _ Stream default.	for t2 from: classvars contents do		[t2 = ClassOrganization  []		t1 append: t2.		t1 space].	t1 contents]' classified: 'As yet unclassified'Class derstands: myinstvars.Class understands: 'compileall | sel priorChanges	" | c. for c from: user classNames do		[c < ''Aa''[]		c = CompiledMethod[]		user cr; show: c.		(Smalltalkc) compileall].  "	[priorChanges _ Changes copy.	for sel from: messagedict contents do		[self understands: (self code: sel)].	Changes _ priorChanges.	self  Object  [nil installError]	MessageDict new freeMethods]' classified: 'As yet unclassified'Class understands: 'fixSubClassesOf: oldClass | n subclass changeString	[for n from: user classNames do		[subclass _ Smalltalkn.		 subclass superclassoldClass			[changeString _ ''+'' + subclass title.			Class new title: subclass title				subclassof: self				fields: subclass fieldsString				declare: subclass declareString.			Changes has: changeString				[Changes delete: changeString]]]]' classified: 'As yet unclassified'Class derstands: copyof:subclassof:.Class derstands: newFieldsForSubClass:.