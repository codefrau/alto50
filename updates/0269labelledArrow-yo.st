ArrowWindow understands: 'setBoundsForDownPointing: rect	[self init.	self style: beginPoint _ rect center x  rect top.	self style: endPoint _ rect center x  rect bottom.	frame _ self updateFrame]' classified: 'as yet unclassified'D1Recognizer understands: 'clearDefault	[default _ nil]'D1Recognizer understands: 'moreTemplateData 	[((''U'' (612 115 612 116 612 116 612 120 612 120 612 126 612 138 612 138 612 150 612 150 612 163 612 163 612 175 612 175 612 190 612 190 612 203 612 216 612 216 612 225 612 225 612 237 612 237 612 241 612 241 612 246 612 246 612 253 612 257 612 257 612 262 612 262 612 265 612 265 612 267 612 267 613 267 614 267 614 267 616 267 616 267 620 265 620 265 623 265 623 265 633 264 633 264 640 264 640 264 649 264 649 264 660 264 660 264 686 264 686 264 698 264 698 264 708 265 708 265 715 266 715 266 725 267 725 267 730 268 730 268 740 269 740 269 743 269 743 269 746 269 746 269 749 269 749 269 753 269 753 269 757 269 757 269 760 269 760 269 763 269 763 269 765 269 765 269 769 269 769 269 772 269 772 269 774 269 774 269 777 269 777 269 779 269 781 269 781 269 783 269 783 269 784 269 784 269 786 269 786 269 787 269 787 269 788 269 788 269 789 269 789 269 789 268 789 266 789 266 789 262 789 262 789 256 789 256 789 246 789 246 788 237 788 237 787 227 786 216 786 216 786 206 786 206 786 195 786 195 786 185 786 176 786 176 786 166 786 166 786 160 786 160 786 155 786 155 786 151 786 151 786 149 786 148 786 148 786 147 786 147 786 145 786 145 786 141 786 139 786 139 786 137 786 137 786 136 786 136 786 135 786 135 786 133 786 132 786 132 786 129 786 129 786 127 786 127 786 124 786 124 786 122 786 121 786 121 786 120 786 120 786 119 786 119 786 118 786 118 ) ) (''U'' (514 141 514 146 514 146 514 151 514 151 514 158 514 158 514 165 514 165 514 174 514 183 514 183 514 194 514 194 514 205 514 205 513 212 513 212 512 218 512 218 512 224 512 228 512 228 512 230 512 230 512 231 512 231 512 232 512 232 512 233 512 233 512 234 512 234 513 234 513 234 514 235 514 235 515 235 515 235 518 235 518 235 525 236 525 236 528 237 528 237 531 237 531 237 534 238 534 238 539 239 545 239 545 239 552 239 552 239 561 239 561 239 568 239 568 239 578 239 590 239 590 239 601 239 601 239 611 238 611 238 621 237 621 237 631 237 631 237 640 237 648 237 648 237 656 237 656 237 662 237 662 237 672 237 672 237 679 237 679 237 686 237 694 237 694 237 702 238 702 238 710 238 710 238 717 238 717 238 726 238 726 238 735 238 745 238 745 238 755 236 755 236 762 235 762 235 770 233 770 233 777 231 783 229 783 229 787 228 787 228 793 227 793 227 797 227 797 227 802 227 806 226 806 226 810 226 810 226 814 226 814 226 819 226 819 226 823 226 823 226 829 226 834 226 834 226 838 226 838 226 846 226 846 226 851 227 851 227 855 228 855 228 862 229 867 229 867 229 874 229 874 229 881 229 881 229 889 229 889 229 897 229 903 229 903 229 910 229 910 229 915 229 915 229 920 229 920 229 925 229 925 229 929 230 932 231 932 231 935 232 935 232 936 233 936 233 937 233 937 233 937 232 937 232 937 228 937 222 937 222 937 213 937 213 937 202 937 202 937 192 937 192 937 179 937 179 937 175 937 175 937 172 937 172 937 169 937 169 937 165 937 165 937 162 937 160 937 160 937 159 937 159 937 158 937 158 937 156 937 156 937 154 938 152 938 152 938 150 938 150 938 149 938 149 ) ) (''L'' (578 96 578 95 578 95 578 97 578 97 578 102 578 102 578 109 578 124 578 124 578 138 578 138 578 162 578 162 578 184 578 184 578 203 578 203 578 225 578 253 578 253 578 266 578 266 578 282 578 282 578 293 578 293 578 301 578 301 578 308 578 312 578 312 578 315 578 315 578 316 578 316 579 316 579 316 582 316 582 316 587 315 587 315 593 314 593 314 602 314 612 314 612 314 622 314 622 314 634 315 634 315 642 316 642 316 648 317 648 317 654 318 656 319 656 319 657 320 657 320 658 320 658 320 659 320 659 320)) (''R'' (903 77 903 83 903 83 903 89 903 89 903 97 903 97 903 108 903 108 903 144 903 144 903 163 903 163 903 177 903 177 903 196 903 196 903 214 903 230 903 230 903 245 903 245 903 256 903 256 903 265 903 265 902 276 902 276 901 290 901 290 901 296 901 296 901 301 901 301 901 302 901 302 901 303 901 303 901 304 901 304 900 304 900 304 899 304 896 304 896 304 891 304 891 304 883 304 883 304 876 304 876 304 867 304 867 304 857 304 851 304 851 304 844 304 844 304 839 304 839 304 837 304 837 304 836 304 835 304 835 304)) (''scrub'' (530 284 530 283 530 283 530 278 530 278 530 273 530 265 530 265 531 260 531 260 532 255 532 255 534 248 534 248 535 241 538 235 538 235 540 229 540 229 542 221 542 221 544 214 544 214 548 207 548 207 551 199 554 191 554 191 556 184 556 184 559 175 559 175 563 170 563 170 565 165 566 161 566 161 568 159 568 159 569 157 569 157 569 155 571 152 571 152 571 150 571 150 572 149 572 149 573 148 573 148 573 147 573 147 574 148 574 148 574 149 574 149 575 150 575 150 575 152 576 154 576 154 577 157 577 157 579 160 579 160 580 165 580 165 584 175 584 175 590 191 590 191 592 199 592 199 597 214 597 214 600 224 600 224 601 230 601 230 602 236 602 236 603 240 603 240 606 246 606 246 607 248 607 248 608 251 608 251 609 252 609 252 611 255 611 255 612 257 613 259 613 259 614 261 614 261 615 263 615 263 616 265 616 265 616 266 616 266 617 268 618 269 618 269 619 270 619 270 619 272 619 272 619 273 619 273 619 274 619 274 619 275 619 275 621 276 621 276 621 277 621 277 622 277 622 277 622 276 622 276 622 272 622 272 622 261 622 261 624 253 624 253 627 246 627 246 629 239 629 239 631 230 634 219 634 219 636 210 636 210 638 203 638 203 641 197 641 197 643 189 646 182 646 182 649 176 649 176 651 169 651 169 653 163 656 158 656 158 658 152 658 152 659 149 659 149 661 145 661 145 662 141 662 140 662 140 663 138 663 138 664 138 664 138 664 140 664 140 665 141 665 141 666 143 668 145 668 145 669 148 669 148 671 151 671 151 673 156 673 156 678 167 678 167 681 174 681 174 684 181 684 181 687 186 687 186 690 191 690 191 692 198 694 204 694 204 698 212 698 212 701 219 701 219 702 224 702 224 704 229 705 232 705 232 707 235 707 235 708 238 708 238 709 240 709 240 710 243 710 243 710 244 711 246 711 246 712 247 712 247 712 249 712 249 714 250 714 250 715 251 715 252 715 252 715 254 715 254 715 255 715 255 716 255 716 255 716 257 717 258 717 258 718 260 718 260 718 262 718 262 719 263 719 263 719 265 719 266 719 266 720 266 720 266 720 267 720 267 720 269 720 269 722 272 722 272 722 273 722 273 723 273 723 273 723 269 723 269 725 266 725 266 727 261 727 261 732 248 732 248 735 240 735 240 738 233 738 233 740 227 740 227 743 220 743 220 748 206 748 206 750 202 750 202 751 197 751 197 753 192 753 192 754 187 754 187 757 176 757 176 758 169 758 169 759 164 759 164 759 158 759 152 759 152 760 149 760 149 761 147 761 147 761 146 761 146 762 144 762 144 762 143 762 143 763 141 763 140 763 140 764 138 764 138 764 137 764 137 764 136 764 136 765 136 765 136 766 136 766 136 766 137 766 137 767 139 767 139 769 141 769 141 770 144 772 149 772 149 776 153 776 153 777 157 777 157 779 162 779 162 783 173 783 173 786 177 786 177 787 181 787 181 789 185 789 185 792 195 792 195 794 201 794 201 796 206 796 206 799 211 800 215 800 215 802 219 802 219 803 223 803 223 804 227 804 227 804 230 805 232 805 232 807 234 807 234 808 235 808 235 809 238 809 238 809 240 810 242 810 242 810 244 810 244 811 246 811 246 812 247 812 247 812 248 813 249 813 249 813 250 813 250 813 251 813 251 813 252 813 252 814 252 814 252 814 253 814 253 815 255 815 255 815 257 815 257 816 259 816 259 817 264 817 264 817 265 817 265 818 265 818 265 818 266 818 266 818 267 818 267 818 268 818 268)) (''downarrow'' (621 59 620 59 620 59 622 59 622 59 624 59 624 59 627 59 627 59 629 59 629 59 634 59 634 59 636 60 636 60 637 60 637 60 638 61 638 61 640 63 643 65 643 65 645 67 645 67 648 72 648 72 651 76 651 76 652 79 656 83 656 83 657 88 657 88 659 92 659 92 661 96 661 96 662 100 663 104 663 104 665 110 665 110 666 116 666 116 666 120 666 120 667 124 667 128 667 128 667 132 667 132 667 134 667 134 667 139 667 139 667 141 667 141 666 144 664 147 664 147 663 149 663 149 661 150 661 150 660 151 660 151 658 151 658 151 656 151 653 151 653 151 650 151 650 151 647 150 647 150 645 148 645 148 643 146 641 143 641 143 641 141 641 141 640 139 640 139 640 137 640 137 640 134 640 131 640 131 640 128 640 128 642 126 642 126 644 123 644 123 645 121 645 121 647 120 648 120 648 120 650 120 650 120 651 120 651 120 652 120 652 120 655 120 657 120 657 120 658 121 658 121 660 123 660 123 662 127 662 127 663 130 663 130 666 134 667 139 667 139 669 144 669 144 672 147 672 147 673 152 673 152 675 158 676 164 676 164 676 168 676 168 677 175 677 175 678 180 678 180 678 187 678 192 678 192 678 201 678 201 678 205 678 205 678 212 678 212 678 219 678 225 678 225 678 231 678 231 678 236 678 236 678 238 678 238 676 240 676 240 676 241 676 241 676 244 676 244 676 246 676 246 676 249 676 249 677 252 677 252 677 255 678 258 678 258 678 260 678 260 678 261 678 261 678 263 678 263 679 264 679 264 679 265 679 265 679 266 679 266 679 270 679 275 679 275 679 281 679 281 679 287 679 287 679 296 679 296 680 301 681 306 681 306 683 310 683 310 684 316 684 316 684 317 684 317 684 316 684 316 680 313 680 313 678 310 678 310 675 307 675 307 672 304 669 301 669 301 668 300 668 300 666 298 666 298 665 297 665 297 663 296 662 295 662 295 661 294 661 294 659 293 659 293 658 292 658 292 657 291 657 291 656 291 656 291 656 290 655 290 655 290 655 289 655 289 655 288 655 288 656 288 656 288 658 288 658 288 659 287 662 287 662 287 665 286 665 286 667 286 667 286 670 285 670 285 672 285 672 285 674 285 676 285 676 285 679 285 679 285 681 285 681 285 682 284 682 284 684 284 687 283 687 283 688 282 688 282 689 281 689 281 691 281 691 281 692 281 692 281 693 281 694 281 694 281 695 281 695 281 696 281 696 281 697 281 697 281 698 281 699 281 699 281 699 280 699 280 700 280 700 280 701 280 701 280 702 280 702 280 702 281 702 281 702 282 702 282 702 283 702 285 702 285 701 287 701 287 699 289 699 289 698 291 698 291 697 294 697 294 695 297 694 299 694 299 693 302 693 302 691 305 691 305 690 307 690 307 688 309 687 310 687 310 687 311 687 311 686 311 686 311 686 312 686 312 686 313 685 313 685 313)))]'UserView understands: 'recognizeStroke: stroke | result ps cls d r	[ps _ stroke points.	stroke preProcess.	result _ self recognizer recognizeStroke: stroke.	[(result  1)		= ''star''  [cls _ StarWindow];		= ''circle''  [cls _ EllipseWindow];		= ''arrow''  [cls _ ArrowWindow]].	[nil  cls  [		user schedule: (cls new setBounds: (Rectangle new encompass: ps))]	(result  1) = ''rectangle''  [		d _ D1TopWindow new setBounds: (Rectangle new encompass: ps).		d style: noTitle _ true.		d text: ''''.		d alignment: 2.		user schedule: d]	(result  1) = ''downarrow''  [		user scheduleOnBottom: (ArrowWindow new setBoundsForDownPointing: (Rectangle new encompass: ps)).		r _ Rectangle new encompass: ps.				d _ D1TopWindow new setBounds: ((r origin x - (r width / 4))  (r origin y + (r height * 2 / 5)) rect: ((r corner x + (r width / 4))  (r origin y + (r height * 3 / 5)))).		d style: noTitle _ true.		d text: ''''.		d alignment: 2.		user schedule: d]]]' classified: 'as yet unclassified'D1Recognizer new clearDefault