'Better support for font editing'BitRectTool understands: 'blowup | smallRect bigRectFrame	[smallRect_[(editor frame extent * blowupScale) < (user screenrect extent / 2)  [user waitnobug. editor frame] self getRectangle].	[smallRect area < 100 [smallRect _ pencil frame]].	bigRectFrame _ Rectangle new origin: smallRect corner		extent: 44 + (smallRect  extent*blowupScale).	smallRect empty or bigRectFrame bitStringLength>16000		[pencil frame flash.  nil].	[user screenrect has: bigRectFrame corner[] 		bigRectFrame moveto: smallRect origin-bigRectFrame extent.		user screenrect has: bigRectFrame origin[]		"can''t find a space for blown up image"			pencil frame flash.  nil].	self blowup: smallRect to: bigRectFrame]' classified: 'as yet unclassified'Form understands: 'edit "Form fromuser edit."	[self editIn: (Rectangle fromuser origin extent: self extent) title: ''Form Editor'']' classified: 'editing'Form understands: 'editIn: frame title: title | bitrect ed	[user leaveTop.	bitrect _ BitRect new readFromForm: self.	bitrect title _ title.	ed _ BitRectEditor new picture: bitrect.	ed formUnderEdit: self.	ed frame: frame; show.	user restartup: ed]'FormWindow understands: 'yellowbug | choices choice	[choices _ (''repaint'' ''dst _ src'' ''dst or src'' ''dst xor src'' ''dst and src''		''dst _ ~src'' ''dst or ~src'' ''dst xor ~src'' ''dst and ~src'' ''reflow'') copy.	choice _ effect + 2.	choiceschoice _ '' '' + (choiceschoice) + ''  ''.	[self style: reflow  [choices10 _ '' '' + (choices10) + ''  '']].	choice _ (Menu new stringFromVector: choices) bug.	choice = 0  []	choice = 1  [form editIn: frame copy title: ''Editing '' + self title]	choice = 10  [self style: reflow _ (self style: reflow)  false. self frame: frame. user restore]	effect _ choice - 2.	(effect land: 3)  0  "set transparent fill"		[[(self style: fill) = white  [self style: fill _ nil]].		user restore: frame]	self show]' classified: 'as yet unclassified'UserView understands: 'schedule: w 	[sched  nil  [sched _ w inVector]	sched _ w inVector concat: sched.	beTopWindow _ w]' classified: 'as yet unclassified'Form derstands: 'editIn:' unique.