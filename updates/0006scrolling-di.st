'Make scroll feedback immediate'CodePane understands: 'eachtime [  "Decompiler messes up on this method"	user kbck [self kbd]	frame has: user mp [		user anybug [			user redbug [self redbug]			user yellowbug [self yellowbug]			user bluebug [false]]		user anykeys [self keyset]]	self outside]' classified: 'As yet unclassified'ScrollBar understands: 'eachtime | t1 t2 t3 	[t1 _ user mp.	rect has: t1 		[t2 _ rect center x - 2.		t1 x < t2 			[t3 _ Rectangle new origin: rect origin corner: t2  rect maxY.			DownCursor showwhile 				[while [t1 _ user mp.				t3 has: t1] do					[self slide: t1  [owner scrollTo: (position minY - rect minY - 4) asFloat / (rect height - 12)]					user redbug  [self reposition 							[owner scrollUp: rect origin y - t1 y.							user waitnobug]]].				nil]]		t3 _ Rectangle new origin: t2  rect minY corner: rect corner.		UpCursor showwhile 			[while [t1 _ user mp.			t3 has: t1] do				[self slide: t1  [owner scrollTo: (position minY - rect minY - 4) asFloat / (rect height - 12)]				user redbug  [self reposition 						[owner scrollUp: t1 y - rect origin y.						user waitnobug]]].			nil]]	false]' classified: 'As yet unclassified'ScrollBar understands: 'slide: t1 | t2 	[position has: t1 		[JumpCursor showwhile 			[t2 _ false.			while ((position has: user mp) and t2  false) do				[user redbug 					[t2 _ true.					while user redbug do						[self reshow 							[position moveto: position origin x  ((user mp y max: rect origin y + 4) min: rect corner y - 12).							owner scrollTo: (position minY - rect minY - 4) asFloat / (rect height - 12)]]]].			nil].		t2]	false]' classified: 'As yet unclassified'TextImage understands: 'selectword | t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 	[t3 _ 1.	t2 _ t3.	t1 _ t2.	t8 _ para text.	t9 _ t8 length.	t5 _ 1.	t6 _ ''([{<''''"''.	t7 _ '')]}>''''"''.	c1 = 1 		[c2 _ t9 + 1.		self]	[c1  1 		[t3 _ 1.		t4 _ c1]	c1 > t9  [t4 _ c1 - 1]	t1 _ para  (c1 - 1).	t4 _ t6 find: t1.	t4 > 0 		[t3 _ 1.		t2 _ t7  t4.		t4 _ c1 - 1]	t1 _ para  c1.	t4 _ t7 find: t1.	t4 > 0 		[t3 _ 1.		t2 _ t6  t4.		t4 _ c1]	t1 _ 1.	t4 _ c1].	until (t5 = 0 or [t3 = 1  [t4  t9]	t4  1]) do		[t4 _ t4 + t3.		t10 _ t8  t4.		t10 = t2  [t5 _ t5 - 1]		t10 = t1  [t5 _ t5 + 1]		t1 = 1 			[(t8  t4) tokenish 				[t4 = 1 					[t3 _ 1.					c1 _ t3.					t4 _ c2]]			t3 = 1 				[c1 _ t4 + 1.				t3 _ 1.				t4 _ c2 - 1]			t5 _ 0]].	[t5  0  [t4 _ t4 + t3]].	t3 = 1  [c2 _ t4 min: t9 + 1]	c1 _ t4 + 1]' classified: 'As yet unclassified'