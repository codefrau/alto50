'Make project sorter work'ListPane understands: 'redbug | newSel f		"Deselect selection and select cursor item, if any"	[[f _ self locked []	self compselection.	newSel _ ((self lineofy: user mp y) max: 1) - 1.	XeqCursor showwhile [self select: [newSel = selection [0] newSel]]].	while (user redbug and (window has: user mp)) do [		f [f flash. self compselection. user displayFlush. self compselection]]]' classified: 'As yet unclassified'ProjectPane understands: 'redbug | sel dragSel	[self compselection.	sel _ ((self lineofy: user mp y) max: 1) - 1.	XeqCursor showwhile [self select: [sel = selection  [0] sel]].	selection = 0  [user waitnobug].	while (user anybug and (window has: user mp)) do		[dragSel _ (self lineofy: user mp y) - 1.		(dragSel cansubscript: list) and dragSel  sel  [			[dragSel > sel "we just flip two entries at at time"				[dragSel _ sel+1]				dragSel _ sel-1].			list swap: sel with: dragSel.			self of: list.			sel _ dragSel.			self select: sel]].	sorter namesInOrder: list]' classified: 'As yet unclassified'ProjectPane understands: 'yellowbug | editmenu choice	[selection = 0  []	scrollBar hidewhile 		[choice _ (Menu new string: ''go to '' + (listselection)) bug].	choice = 1  [sorter visit: selection]]' classified: 'As yet unclassified'ProjectSorter understands: 'current	[user rootUserview projectWindow title]' classified: 'As yet unclassified'ProjectSorter understands: 'enter | projects nowNames newNames n p	[super enter.	Smalltalk declare: projectSequencer as: self.	self validateNames.	panes1 of: namesInOrder]' classified: 'As yet unclassified'ProjectSorter understands: 'visit: index | name p	[self validateNames.	name _ namesInOrder  (index - 1 \ namesInOrder length + 1).	for p from: self allProjects do [		p title = name  [p install]]]' classified: 'As yet unclassified'ProjectSorter understands: 'visitNext	[self visit: (namesInOrder find: self current) + 1]' classified: 'As yet unclassified'ProjectSorter understands: 'visitPrevious	[self visit: (namesInOrder find: self current) - 1]' classified: 'As yet unclassified'Class new title: ProjectSorter	subclassof: PanedWindow	fields: 'namesInOrder'	declare: 'stdTemplates ';	classified: 'Windows'ProjectWindow understands: 'install 	[user  userview  []	user uninstall.	Changes _ changes.	user _ userview.	user install.	self putTitle.	thisContext restart]' classified: 'As yet unclassified'UserView understands: 'bugScreenMenu | m w turtle i f index file	[m _ 0.	screenMenu bug	= (m_m+1) 		[projectWindow  nil  []		projectWindow runParent];	= (m_m+1) 		[Smalltalk has: projectSequencer 			[(Smalltalk  projectSequencer) visitNext]];	= (m_m+1)  [self restore];	= (m_m+1)  [self schedule: ProjectWindow init];	= (m_m+1)  [self schedule: ProjectSorter init];	= (m_m+1)  [self schedule: BrowseWindow default];	= (m_m+1)  [self schedule: (CodeWindow new class: UserView selector: workspace para: (UserView code: workspace) formerly: false)];	= (m_m+1)  [w _ self loadFormWindow  [self schedule: w]];	= (m_m+1)  [self schedule: (D1TopWindow new default)];	= (m_m+1) 		[turtle _ Turtle init.		turtle color: black; width: 4; inking: oring.		for i to: 50 do [turtle go: i * 4; turn: 89]];	= (m_m+1) 		[f _ self fileMenu: ''edit'' directory: '''' matching: ''*''			 [self editFile: f]];	= (m_m+1) 		[f _ self fileMenu: ''file in'' directory: '''' matching: ''*.st''			 [self filin: f]];	= (m_m+1) 		[f _ self fileMenu: ''publish'' directory: '''' matching: ''*.st''			 [file _ self fileString: f.			self fileString: (self update: f _ file) _ file.			self fileString: f _ nil]];	= (m_m+1)  [self loadUpdates];	= (m_m+1)  [user save]]' classified: 'As yet unclassified'UserView understands: 'classInit 	[screenMenu _ Menu new string:''go to parent projectgo to next projectrestore displayopen a projectopen a project sorteropen a browseropen a workspaceopen form ...tablet demoturtle demoedit file ...file in ...publish update ...load updatessave'']' classified: 'As yet unclassified'UserView classInit