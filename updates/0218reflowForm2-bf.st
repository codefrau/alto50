'Keep form reflown, yellow bug menu item to turn off reflow'Form understands: 'displayReflown: rect	[self displayReflown: rect effect: storing]'Form understands: 'displayReflown: rect effect: effect	[self displayReflown: rect effect: storing in: DisplayForm]'Form understands: 'displayReflown: rect effect: effect in: destForm | b	[b _ BitBlt new.	b function _ effect.	b sourceForm _ self.	b source _ 00.	b destForm _ destForm.	b dest _ rect origin.	b height _ 1.	while true do [		b width _ rect maxX - b destx min: extent x - b sourcex.		b callBLT.		b sourcex _ b sourcex + b width.		b destx _ b destx + b width.		[b sourcex  extent x 			[b sourcex _ 0. b sourcey _ b sourcey + 1.			b sourcey  extent y  [self]]].		[b destx  rect maxX 			[b destx _ rect minX. b desty _ b desty + 1.			b desty  rect maxY  [self]]]]]'FormWindow understands: 'fixframe: rect	[turtlemodetrue or (self style: reflow)  [rect].	rect extent _ form extent.	rect]'FormWindow understands: 'reflow | bgbits saved offset w h	[frame boxcomp. user displayFlush.	self restore.	bgbits _ user screenrect bitsIntoString.	offset _ frame width - user x.	frame boxcomp. 	form displayReflown: frame effect: effect.	until user nobug do [		w _ user x + offset max: 4.		h _ form width * form height / w.		frame extent _ wh.		user screenrect bitsFromString: bgbits.		frame boxcomp.		form displayReflown: frame effect: effect].	self style: reflow _ true.	user screenrect bitsFromString: bgbits.	self show]'FormWindow understands: 'show	[super show.	(self style: reflow) and frame extent  form extent 		[form displayReflown: frame effect: effect]	form displayat: frame origin effect: effect]'FormWindow understands: 'yellowbug | choices choice	[choices _ (''dst _ src'' ''dst or src'' ''dst xor src'' ''dst and src''		''dst _ ~src'' ''dst or ~src'' ''dst xor ~src'' ''dst and ~src'' ''reflow'' ''edit'') copy.	for choice to: 8 do		[effect + 1 = choice  [choiceschoice _ '' '' + (choiceschoice) + ''  '']].	[self style: reflow  [choices9 _ '' '' + (choices9) + ''  '']].	choice _ (Menu new stringFromVector: choices) bug.	choice = 0  []	choice = 9  [self style: reflow _ (self style: reflow)  false. self frame: frame. user restore]	choice = 10  [form edit]	effect _ choice - 1.	(effect land: 3)  0  "set transparent fill"		[[(self style: fill) = white  [self style: fill _ nil]].		user restore: frame]	self show]'Window understands: 'styleEdit | menu items item i val mark 	[menu _ Menu new.	while true do [		items _ Stream default.		for item from: (			(noTitle true ''no title'')			('''')			(fill nil ''no fill'')			(fill black ''black'')			(fill dkgray ''dark gray'')			(fill gray ''medium gray'')			(fill ltgray ''light gray'')			(fill white ''white'')			('''')			(noBorder true ''no border'')			(noBorder false borderWidth 1 ''1 px'')			(noBorder false borderWidth 2 ''2 px'')			(noBorder false borderWidth 4 ''4 px'')			(noBorder false borderWidth 8 ''8 px'')			(noBorder false borderWidth 16 ''16 px'')			(noBorder false borderColor black ''black'')			(noBorder false borderColor dkgray ''dark gray'')			(noBorder false borderColor gray ''medium gray'')			(noBorder false borderColor ltgray ''light gray'')			(noBorder false borderColor white ''white'')			('''')			('' done '')		) do [mark _ false.			[item length > 1 				[mark _ true.				for i from: 1 to: item length - 1 by: 2 do [					val _ item(i + 1).					val _ [Smalltalk has: val  [Smalltalkval] val nonliteral].					(self style: itemi)  val  [mark _ false]]]].			mark  [items append: '' ''; append: item last; append: ''  ''; cr].			items append: item last; cr].		(menu string: items contents) fbug		= 0  [self];		= 1  [self style: noTitle _ (self style: noTitle)  false. user restore];			= 3  [self style: fill _ [(self style: fill)  nil  [white] nil]. user restore];		= 4  [self style: fill _ black. self enter];		= 5  [self style: fill _ dkgray. self enter];		= 6  [self style: fill _ gray. self enter];		= 7  [self style: fill _ ltgray. self enter];		= 8  [self style: fill _ white. self enter];			= 10 [self style: noBorder _ (self style: noBorder)  false. user restore];		= 11 [self style: noBorder _ false. self style: borderWidth _ 1. user restore];		= 12 [self style: noBorder _ false. self style: borderWidth _ 2. user restore];		= 13 [self style: noBorder _ false. self style: borderWidth _ 4. user restore];		= 14 [self style: noBorder _ false. self style: borderWidth _ 8. user restore];		= 15 [self style: noBorder _ false. self style: borderWidth _ 16. user restore];		= 16 [self style: noBorder _ false. self style: borderColor _ black. self show];		= 17 [self style: noBorder _ false. self style: borderColor _ dkgray. self show];		= 18 [self style: noBorder _ false. self style: borderColor _ gray. self show];		= 19 [self style: noBorder _ false. self style: borderColor _ ltgray. self show];		= 20 [self style: noBorder _ false. self style: borderColor _ white. self show];			= 22 [self]]]'Form derstands: 'displayReflown:in:' unique.Form derstands: 'displayReflown:in:effect:' unique.