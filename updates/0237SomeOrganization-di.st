Class understands: 'organization | org 	[[classvars  nil  [self declare: ClassOrganization]].	org _ classvars lookup: ClassOrganization.	org is: ClassOrganizer  [org]	org _ ClassOrganizer new init: messagedict contents sort.	classvars insert: ClassOrganization with: org.	org]' classified: 'as yet unclassified'ClassOrganizer understands: 'category: cat | catIx strm c	[cat = ''all'' 		[strm _ Stream new of: (Vector new: 100).		for c from: self categories do			[strm append: (self category: c)].		 strm contents sort].	catIx _ commentVector find: cat.	catIx = 0  [user notify: ''No such category: '' + cat]	groupVector  catIx]' classified: 'as yet unclassified'ClassOrganizer understands: 'classify: element under: category | elt priorCat catIndex priorIndex  	[element is: Vector  [for elt from: element do			[self classify: elt under: category]].	category = ''all''  [self classify: element under: default].	catIndex _ commentVector find: category.	catIndex > 0 and (groupVector  catIndex has: element)  [self]	priorCat _ self invert: element.	[priorCat 		[category = default  [self]		priorIndex _ commentVector find: priorCat.		groupVector  priorIndex _ groupVector  priorIndex delete: element]].	[catIndex = 0  [catIndex _ self insert: category]].	groupVector  catIndex _ groupVector  catIndex insertSorted: element.	priorIndex _ commentVector find: default.	priorIndex > 0 and (groupVector  priorIndex) length = 0  [self deleteCategory: priorIndex]]' classified: 'as yet unclassified'ClassOrganizer understands: 'classInit   "ClassOrganizer classInit."	[default _ ''as yet unclassified''.	self canunderstand: restore 		[self restore. self class derstands: restore].	]' classified: 'as yet unclassified'ClassOrganizer understands: 'init: t1 	[self globalComment_ ''This class has not yet been commented''.	commentVector _ ''as yet unclassified'' inVector.	groupVector _ t1 inVector]' classified: 'as yet unclassified'ClassOrganizer understands: 'insert: newCategory | defaultSlot defaultElements len 	[defaultSlot _ commentVector find: default.	[defaultSlot > 0  [defaultElements _ groupVector  defaultSlot]].	"remove unclassified category"	commentVector _ (commentVector without: defaultSlot) , newCategory.	groupVector _ (groupVector without: defaultSlot) , (Vector new: 0).	len _ commentVector length.	defaultSlot = 0 or defaultElements length = 0  [len]	"add unclassified category back at end"	commentVector _ commentVector , default.	groupVector _ groupVector , defaultElements.	len]' classified: 'as yet unclassified'ClassOrganizer understands: 'restore  | n d strm sel cat cl share  "ClassOrganizer new restore."	[d _ Dictionary new init: 3000.	share _ Dictionary new init: 200.	"Read in categories from ST80"	strm _ Stream new of: (+ ''arithmetic'' - ''arithmetic'' < ''comparing'' > ''comparing'' = ''comparing'' * ''arithmetic'' / ''arithmetic'' next ''accessing'' next ''accessing'' class ''class membership'' new ''instance creation'' new: ''instance creation'' x ''accessing'' y ''accessing'' primitive ''accessing'' value ''accessing'' object: ''accessing'' print: ''debug printing'' value ''accessing'' growto: ''private'' init: ''private'' declare: ''initialize-release'' currentCursor: ''cursor'' show ''button commands'' currentCursor ''cursor'' offset ''accessing'' bits ''accessing'' cr ''debug printing'' asForm ''accessing'' black ''coloring'' white ''coloring'' width ''accessing'' origin ''accessing'' corner ''accessing'' and: ''controlling'' growby: ''private'' height ''accessing'' min: ''comparing'' rect: ''actions & preps'' y ''accessing'' copy ''copying'' size ''accessing'' area ''accessing'' max: ''comparing'' clear: ''clearing'' origin ''accessing'' intersect: ''rectangle functions'' extent ''accessing'' or: ''controlling'' outline ''indicating'' notify: ''error handling'' to: ''converting'' abs ''arithmetic'' inset: ''accessing'' width ''accessing'' x ''accessing'' corners ''accessing'' center ''accessing'' clear ''clearing'' flash ''indicating'' height ''accessing'' corner ''accessing'' extent ''accessing'' contents ''accessing'' intersects: ''testing'' paint: ''actions & preps'' lock ''lock access'' unlock ''lock access'' color ''as yet unclassified'' init ''initialize-release'' copy: ''copying'' source ''accessing'' window ''window access'' window: ''window access'' destForm ''accessing'' sourceForm ''accessing'' classInit ''as yet unclassified'' color ''as yet unclassified'' asPoint ''converting'' | ''logical operations'' bottom ''accessing'' top ''accessing'' reverse ''coloring'' turn: ''moving'' home ''accessing'' asInteger ''converting'' sign ''testing'' color: ''accessing'' width: ''accessing'' up ''moving'' erase ''displaying'' go: ''moving'' goto: ''moving'' , ''composition'' place: ''moving'' to:by: ''intervals'' source: ''accessing'' doit ''initialization'' extent: ''geometry'' bits: ''accessing'' rectangle ''accessing'' file: ''accessing'' close ''all'' nextString ''nonhomogeneous accessing'' offset: ''accessing'' nextString ''nonhomogeneous accessing'' string: ''private'' last ''accessing'' line: ''actions & preps'' trimLinesTo: ''private'' slide: ''updating'' alignment ''accessing'' baseline ''accessing'' font: ''accessing'' name ''accessing'' asUppercase ''converting'' ascent ''accessing'' descent ''accessing'' swap:with: ''private'' even ''testing'' next: ''accessing'' glyphs ''accessing'' raster ''accessing'' show: ''accessing'' asParagraph ''converting'' text ''accessing'' tab ''stop conditions'' bs ''character writing'' space ''character writing'' grow ''private'' rescan ''private'' runs ''private'' allBold ''emphasis'' storeOn: ''printing'' findString:startingAt: ''accessing'' textStyle ''access'' readFrom: ''fileIn/Out'' find: ''typing/selecting keys'' alignment ''accessing'' text: ''accessing'' count: ''enumerating'' notNil ''testing'' species ''private'' asArray ''converting'' sort:to: ''private'' promote: ''scheduling'' sum ''enumerating'' last ''accessing'' copyto: ''private'' asSet ''converting'' add: ''adding'' hash ''comparing'' start ''e-toy commands'' stop ''all'' map ''accessing'' values ''private'' rehash ''private'' invert: ''transformations'' asString ''converting'' asFloat ''converting'' find ''menu messages'' first ''accessing'' under ''menu messages'' flush ''all'' quit ''menu messages'' noChanges ''sources, change log'' primKbdNext ''private'' unschedule: ''scheduling'' restart ''initialize-release'' spawn ''menu messages'' mclass ''debugger access'' selector ''accessing'' select: ''enumerating'' terminate ''changing process state'' comment: ''comment'' stack ''debugger access'' code ''code generation'' sender ''debugger access'' sender ''debugger access'' release ''initialize-release'' compile: ''creating method dictionary'' restartWith: ''initialize-release'' receiver ''accessing'' literals ''results'' initialPC ''accessing'' numArgs ''accessing'' numTemps ''accessing'' initSymbols: ''initialize-release'' crtab: ''character writing'' isReturnSelf ''testing'' isReturnField ''testing'' emitForValue:on: ''code generation'' emitExceptLast:on: ''code generation'' returns ''testing'' args ''all'' args ''all'' negated ''arithmetic'' selector: ''accessing'' position ''positioning'' keywords ''converting'' sizeForEffect: ''code generation'' emitForEffect:on: ''code generation'' pop: ''contexts'' pop ''controlling'' skip: ''positioning'' expr: ''initialize-release'' position ''positioning'' literal: ''compiled methods'' highlight ''indicating'' pc ''code generation'' reset ''sound generation'' push: ''contexts'' fill ''menu'' enter ''menu messages'' litIndex: ''encoding'' title ''access'' interactive ''error handling'' notify:at:in: ''compiler access'' swapSender: ''debugger access'' block ''editing tools'' perform:with:with: ''message handling'' organization ''organization'' classify:under: ''compiler access'' advance ''scanning'' expression ''all'' resume ''changing process state'' statements: ''equation translation'' peek ''accessing'' step ''stepping'' sameAs: ''comparing'' again ''menu messages'' cut ''menu messages'' paste ''menu messages'' undo ''start & finish'' selectAndScroll ''as yet unclassified'' select ''all'' tokenish ''testing'' selection ''selecting'' edit: ''character shapes'' cancel ''menu messages'' fit ''utilities'' resize ''framing'' align ''as yet unclassified'' selectionAsStream ''accessing'' asFileName ''converting'' inspect ''user interface'' current ''chat processing'' caller ''contexts'' changedClasses ''change management'' time ''all'' time ''all'' line: ''actions & preps'' between:and: ''comparing'' hex ''printing'' compare: ''private'' isNumber ''testing'' factorial ''mathematical functions'' superclassOrder: ''fileIn/Out'' category: ''contents'' superclass ''accessing class hierarchy'' categories ''accessing'' debug ''menu messages'' restore ''displaying'' scheduleOnBottom: ''scheduling'' day ''accessing'' leap ''accessing'' year ''accessing'' day:year: ''private'' previous: ''inquiries'' hours ''accessing'' hours: ''private'' version ''sources, change log'' skipTo: ''positioning'' stamp ''access'' restore: ''displaying'' restore:without: ''displaying'' classNames ''class names'' allInstances ''accessing instances and variables'' install ''install / exit'' save ''start & finish'' update ''accessing'' obsolete ''initialize-release'' definition ''fileIn/Out'' buttons ''accessing'' restart ''initialize-release'' primKbdPeek ''private'' primMousePt ''private'' declare:from: ''adding'' numLiterals ''accessing'' isQuick ''testing'' asOop ''system primitives'' methods ''fileIn/Out'' stringhash ''private'' perform:with:with:with: ''message handling'' xor: ''logical operations'' eqv: ''logical operations'' fields ''Accessing'' perform: ''message handling'' become: ''system primitives'' perform:with: ''message handling'' error: ''debug extras'' method ''accessing'' arguments ''accessing'' trace ''tracing'' message ''Accessing'' successor ''linked frames'' user ''accessing'' extract ''all'' on: ''private'' shorten ''private'' category ''organization'' decompile: ''creating method dictionary'' copy:from:classified: ''copying'' borderWidth ''bordering'' borderColor ''accessing'' match: ''comparing'' selectors ''accessing method dictionary'' messages ''menu messages'' sharing: ''initialize-release'' rename: ''class name'' copy:from: ''copying'' canUnderstand: ''testing method dictionary'' title: ''access'' minVal ''accessing'' asLowercase ''converting'' maxVal ''accessing'' max ''enumerating'' nextNumber: ''nonhomogeneous accessing'' next: ''accessing'' nextNumber: ''nonhomogeneous accessing'' first ''accessing'' ln ''mathematical functions'' tan ''mathematical functions'' exp ''mathematical functions'' sin ''mathematical functions'' cos ''mathematical functions'' sqrt ''mathematical functions'' log: ''Accessing'' roundTo: ''truncation and round off'' dist: ''point functions'' normalize ''converting'' theta ''polar coordinates'' normal ''point functions'' update: ''updating'' update: ''updating'' removeFromChanges ''fileIn/Out'' form: ''accessing'' atEnd ''testing'' name: ''accessing'' points ''accessing'' peekFor: ''access'' form ''accessing'' chooseAlignment ''editing'' beginPoint ''accessing'' endPoint ''accessing'' encompass: ''rectangle functions'' reorganize ''fileIn/Out'' title ''access'' amountToTranslateWithin: ''rectangle functions'' paste: ''editing keys'' scale ''accessing'' kern ''as yet unclassified'' kern ''as yet unclassified'' size ''accessing'' classComment ''accessing'' data ''accessing'' edit ''editing'' tool ''actions'' line ''editing tools'' confirm: ''error handling'' root ''structure'' parent ''accessing'' firstPoint ''accessing'' recognize ''recognizer'' allImplementorsOf: ''retrieving'' selectLine ''editing keys'' activate ''private'' angle ''accessing'' currentFrame ''private'' left ''accessing'' right ''accessing'' down ''moving'' alignment: ''accessing'' indent: ''editing keys'' ).	user show: ''*** Please wait...''.	until strm end do		[sel _ strm next.		cat _ strm next.		"All orgs share the same category string"		[share has: cat  [cat _ sharecat]			share insert: cat with: cat].		d insert: sel with: cat].	"Categorize messages in ST76"	for n from: user classNames do		[user show: ''.''.		cl _ Smalltalkn.		for sel from: cl messages do			[d has: sel				[cl organization classify: sel under: dsel]]].	]' classified: 'as yet unclassified'OrganizationPane understands: 'listFor: t1 	[class _ t1.	[class  nil  [Vector new: 0]	(ClassDefinition ClassOrganization ''all'') concat: class organization categories]]' classified: 'as yet unclassified'ClassOrganizer classInit