'Add tinyBenchmarks'Integer understands: 'benchFib	"Handy send-heavy benchmark"	"(result / seconds to run) = approx calls per second"	"| r t .	t _ user millisecondsToRun [r _ 20 benchFib].	r * 1000 / t"	[self < 2  [1].	 (self-1) benchFib + (self-2) benchFib + 1]' classified: 'benchmarks'Integer understands: 'benchmark | size flags prime k count iter i	"Handy bytecode-heavy benchmark"	"(500000 / time to run) = approx bytecodes per second"	"500000 * 10 * 1000 / (user millisecondsToRun [10 benchmark])"	[size _ 8190.	for iter to: self do		[count _ 0.		flags _ (Vector new: size) all_ true.		for i to: size do			[flags  i  [				prime _ i + 1.				k _ i + prime.				while [k  size] do					[flags  k _ false.					k _ k + prime].				count _ count + 1]]].	 count]' classified: 'benchmarks'Integer understands: 'tinyBenchmarks | n1 t1 start n2 t2	"Report the results of running the two tiny benchmarks"	"0 tinyBenchmarks"	[n1 _ 1.	while [t1 _ user millisecondsToRun [n1 benchmark]. 		t1 < 1000] do [n1 _ n1 * 2].	start _ user ticks.	n2 _ 0.	while [n2 _ n2 + 20 benchFib.		t2 _ user ticks - start.		t2 < 1000] do [].	 ((n1 * 500000 * 1000) / t1) asString + '' bytecodes/sec; '' +	  ((n2 * 1000) / t2) asString + '' sends/sec'']' classified: 'benchmarks'UserView understands: 'millisecondsToRun code | start	[start _ self ticks.	code eval.	self ticks - start]'UserView derstands: 'ticksToRun' unique.