'Use original toolpic and actionpic. Add defaultpic. Make form load menu load *.pic.'BitRect understands: 'asForm | form	[form _ Form new extent: self extent.	self copyToForm: form at: 00.	form]'BitRect understands: 'classInit	["the default picture is a gray rectangle"	defaultpic _ BitRect new filin: updateURL + ''defaultpic.pic''.	defaultpic title _ ''defaultpic'']' classified: 'as yet unclassified'BitRect understands: 'filin: filePath | f i x y rect strips  "read bits from a file"	[f _ (user fileString: filePath) asStream.	f end[f close. user notify: ''no data'']	x_f nextword.  y_f nextword.	rect_Rectangle new origin: [origin is: Point[origin] 00] extent: xy.	self title: filePath in: rect.	stripheightf nextword[user notify: ''strip heights dont match'']	strips _ self strips.	for i to: strips length do		[f into: datai].	f close]' classified: 'as yet unclassified'BitRect understands: 'filout | strm  "store in asset directory"	[strm _ Stream default.	self filoutOn: strm.	user fileString: assetURL + title + ''.pic'' _ strm contents]' classified: 'as yet unclassified'BitRect understands: 'title_ title' classified: 'accessing'BitRectEditor understands: 'classInit | t i  "BitRectEditor classInit."   	[t _ Vector new: 6.	for i to: t length do [ti _ BitRectTool new init].	tools _ (RadioButtons new) vec: t at: 00 width: 20.	windowmenu _ Menu new string: ''undermovegrowclosefiloutprintbitsinspectinspect toolinspect pencil''.	actionpic _ BitRect new filin: updateURL + ''actionpic.pic''.	actionpic title _ ''actionpic''.	toolpic _ BitRect new filin: updateURL + ''toolpic.pic''.	toolpic title _ ''toolpic''.	self initmenu1.	]' classified: 'as yet unclassified'UserView understands: 'fileStrings: directory matching: matching | fileNames match matches f	[[matching is: Vector  [] matching _ matching inVector].	fileNames _ self fileStrings: directory.	matches _ (Vector new: 16) asStream.	for match from: matching do [		match  1  (''*''  1)  [self error: ''match not supported'']		match _ match copy: 2 to: match length.		for f from: fileNames do [			(f copy: (f length - match length + 1 max: 1) to: f length) = match				 [matches next _ f]]].	matches contents]' classified: 'as yet unclassified'UserView understands: 'loadFormWindow| f index type slash form window	[f _ self fileMenu: ''form load'' directory: assetURL matching: (''*.form'' ''*.pic'').	f  false  [false]	type _ [f last = (''c''1)  [''pic''] ''form''].	form _ [type = ''pic''  [(BitRect new filin: f) asForm]		Form new fromInstance: (user fileString: f) asStream].	slash _ f reverse find: ''/''1.	[slash = 0  [slash _ f length + 1]].	window _ FormWindow new.	window title _ (f copy: f length - slash + 2 to: f length - type length - 1).	window initForm: form.	window]' classified: 'as yet unclassified'BitRect classInitBitRectEditor classInit