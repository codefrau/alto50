'More robust frame printing'ProcessFrame understands: 'message | method	[self hasCaller 		[method _ process  (self callerBP + dOffsetMethod).		method messageAt: self callerPC]	XXnoCallerXX]' classified: 'context access'ProcessFrame understands: 'printon: strm	[(self validFrameAt: bp)  false 		[process  thisContext  [strm append: ''thisContext''; print: bp]		strm append: ''a ProcessFrame''].	self hasCaller 		[strm append: self mclass title.		[self receiver is: self mclass  []			strm append: ''('' + self receiver class title + '')''].		strm append: '' <= ''.		strm print: self message]	"Root method - maybe search for method in class..."	strm append: self receiver class title + '' <= '' + ''root method'']' classified: 'printing'ProcessFrame understands: 'successor | limit pi 	["Crawl forward in the stack looking for the next viable processFrame"	limit _ process topIndex.	pi _ bp - 1.  "Process index"	while pi  limit do		[[process  (pi + dOffsetBPDelta) is: Integer 			[process  (pi + dOffsetBPDelta) = (bp - pi - 1) 				[process  (pi + dOffsetCallersPC) is: Integer 					[process  (pi + dOffsetNrArgs) is: Integer 						[process  (pi + dOffsetMethod) is: CompiledMethod 							[process  (pi + dOffsetMethodClass) Is: Class  [ProcessFrame new process: process bp: pi]]]]]]].		pi _ pi - 1].	nil]' classified: 'frame access'ProcessFrame understands: 'validFrameAt: pi	[[process  (pi + dOffsetBPDelta) is: Integer 		[process  (pi + dOffsetCallersPC) is: Integer 			[process  (pi + dOffsetNrArgs) is: Integer 				[process  (pi + dOffsetMethod) is: CompiledMethod 					[process  (pi + dOffsetMethodClass) Is: Class  [true]]]]]].	false]' classified: 'frame access'