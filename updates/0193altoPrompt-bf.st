'Use the alto prompt plus space for listener'DefaultTextStyle fontset0 charForm: 20 _ (Form new fromInstance: (user fileString: updateURL + 'altoPrompt.form') asStream).TextImage understands: 'doit: forListener  | result strm c2s s	"Listener wants CR, prompt;  cmd-D wants space and select result"	["if null selection, extend to prompt or current line"	[c1 = c2  [self selectLine] self unselect].	c2s _ c2.	"evaluate the selection"	result _ Generator new evaluate: self selectionAsStream in: false to: nil notifying: self.	self select: c2s.	"add a space and print the result with cr"	strm _ Stream default.	forListener 		[strm crtab: 1; print: result; cr; next_ 20; space.		self paste: strm contents.		self select: c2]	"doit"	strm space; print: result; cr.	self paste: strm contents]'TextImage understands: 'kbd | typed key 	[c1 < c2 and self checklooks  []	typed _ Set new string: 16.	[begintypein  []	Deletion _ self selection.	begintypein _ c1].	while [key _ user kbdnext.	key] do		[key = bs 			[c1 < c2  [] "deleting selection happens below"			typed empty 				[c1 _ 1 max: c1 - 1.				begintypein _ begintypein min: c1]			typed skip: 1]		key = cut  [self copyselection] "because mapped to cmd-c"		key = paste 			[self replace: typed.			begintypein _ c1 _ c2.			self paste]		key = ctlw 			[ [typed empty  [] self replace: typed. typed reset. c1 _ c2].			c1 _ 1 max: c1 - 1.			while (c1 > 1 and (para  (c1 - 1)) tokenish) do				[c1 _ c1 - 1].			begintypein _ begintypein min: c1]		key = esc 			[ [typed empty  [] self replace: typed. typed reset. c1 _ c2].			self fintype.			c1 _ c2 - Scrap length.			self complement]		key = 130   "doit"			[[typed empty  [] self replace: typed. typed reset. c1 _ c2].			begintypein _ false.			self doit: false]		key = 167  "doit prompt"			[typed next_ 20; space]		key = 13  "cr: if listening doit, otherwise insert"			[[typed empty  [] self replace: typed. typed reset. c1 _ c2].			self isListening  [begintypein _ false. self doit: true]			typed next_ key]		typed next_ key].	self replace: typed.	c1 _ c2.	self selectAndScroll]'