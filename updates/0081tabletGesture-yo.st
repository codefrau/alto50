Class new title: D1ResultPane	subclassof: CodePane	fields: ''	declare: '';	classified: 'D1Recognizer'Class new title: D1TextPane	subclassof: CodePane	fields: 'recognizer result pen'	declare: '';	classified: 'D1Recognizer'Class new title: D1TopWindow	subclassof: PanedWindow	fields: ''	declare: '';	classified: 'D1Recognizer'Class new title: D1Window	subclassof: Window	fields: 'recognizer result'	declare: '';	classified: 'D1Recognizer'D1Stroke understands: 'isSkinny: ps | max min t end begin p pi i	[end _ ps last.	begin _ ps  1.	pi _ 3.141592653589793.	min _ pi.	max _ min negated.	for i from: 1 to: ps length do [	 [i  (ps length / 2)	 [p _ end - (ps  i)]	 true  [p _ (ps  i) - begin]].	 t _ self theta: p.	 [t > (pi * 1.5)  [t _ t - (pi * 2.0)]].	 max _ max max: t.	 min _ min min: t].	 (max - min) < 0.3]' classified: 'As yet unclassified'D1Stroke understands: 'preProcess | radians i	[points _ self resample: points with: 64.	isLong _ self isSkinny: points.	points _ self translate: points to: 0  0.	radians _ self indicativeAngle: points.	points _ self rotate: points by: radians.	points _ self scale: points to: 250.0]' classified: 'As yet unclassified'D1TextPane understands: 'frame_ t1 	[frame _ t1]' classified: 'As yet unclassified'D1TextPane understands: 'handleClick: p	[pared select: (pared charofpoint: p).	self show]	' classified: 'As yet unclassified'D1TextPane understands: 'handleGesture: r stroke: ps | s rect	[(r  1) = ''rectangle''  [	 s _ D1Stroke new.	 rect _ s encompassingRectangle: ps.	 pared frame_ rect]	[nil  result  [result text: r asString]]]' classified: 'As yet unclassified'D1TextPane understands: 'handleLineGesture: r stroke: ps | startX	[startX _ (ps  1) x.	[frame origin x < startX and [(frame origin x + 30) > startX]	  [pared alignment _ 1]	(frame center x - 30) < startX and [startX < (frame center x + 30)]	  [pared alignment _ 2]	frame corner x > startX and [(frame corner x - 30) < startX]	  [pared alignment _ 4]]	]' classified: 'As yet unclassified'D1TextPane understands: 'init	[super init.	recognizer _ D1Recognizer new.	recognizer initTemplates.	pen _ Turtle new.	pen batch: false.	pen color: black.	pen init]' classified: 'As yet unclassified'D1TextPane understands: 'redbug | a last current r	[a _ Stream new of: (Vector new: 20).	last _ user mp.	a next _ last.	pen penup.	pen goto: last.	pen pendn.	while user redbug do [	 current _ user mp.	 [last  current  [	 a next _ current.	 pen goto: current.	 last _ current]]].	[a contents length > 1  [	 r _ recognizer recognize: a contents.	 [(r  1) = ''line''  [self handleLineGesture: r stroke: a contents]	 self handleGesture: r stroke: a contents]]	self handleClick: a contents  1].	self show]' classified: 'As yet unclassified'D1TextPane understands: 'to: r	[result _ r]' classified: 'As yet unclassified'D1TopWindow understands: 'default | recog result	[recog _ D1TextPane new.	result _ D1ResultPane new.	self title: ''Tablet'' with: recog, result at: (0  0 rect: 3636), (00 rect: 36  0).	self newframe.	result showing: ''''.	recog showing: ''abc''.	self show.	"recog to: result"]' classified: 'As yet unclassified'D1TopWindow understands: 'text: text	[(panes  1) showing: text.	self show]' classified: 'As yet unclassified'D1Window understands: 'redbug | a last current t	[a _ Stream new of: (Vector new: 20).	last _ user mp.	a next _ last.	t _ Turtle new.	t batch: false.	t color: black.	t init.	t penup.	t goto: last.	t pendn.	while user redbug do [	 current _ user mp.	 [last  current  [	 a next _ current.	 t goto: current.	 last _ current]]].	[nil  result and [a contents length > 1]  [result text: (recognizer recognize: a contents) asString]].	self show]' classified: 'As yet unclassified'TextImage understands: 'alignment_ code	[para alignment_ code.	self displayall.	self reversefrom: c1 to: c2]' classified: 'As yet unclassified'