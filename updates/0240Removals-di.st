MessageDict understands: 'literals [literals]' classified: 'as yet unclassified'Class understands: 'code: sel  | codePara	[codePara _ ([		sel = ClassOrganization  [self organization]		user shiftKey  [self decompile: sel].		(messagedict code: sel)  nil  [self decompile: sel]		messagedict code: sel]) asParagraph.	codePara]' classified: 'as yet unclassified'Class understands: 'derstands: sel | each spec log	[sel is: Vector  [for each from: sel do			[self derstands: each]]	(messagedict has: sel)  false  []	"Perform deletion in a copy then install atomically"	messagedict _ messagedict copy delete: sel.	self organization delete: sel.	spec _ title + '' '' + sel.	Changes insert: ''~'' + spec.	[Changes has: spec  [Changes delete: spec]].	user changeLog log do [self printForget: sel on: log]]' classified: 'as yet unclassified'Class understands: 'forget: selector	[self derstands: selector]' classified: 'as yet unclassified'Class understands: 'install: sel method: m literals: l code: c backpointers: b | spec log	["Perform insertion in a copy then install atomically"	messagedict _ messagedict copy insert: sel method: m literals: l code: c backpointers: b.	Changes insert: (spec _ title + '' '' + sel).	if (Changes has: (spec _ ''~'' + spec)) then [Changes delete: spec].	user changeLog log do [self printMethod: sel on: log]]' classified: 'as yet unclassified'MessageDict understands: 'copyfrom: other 	[super copyfrom: other.	methods _ other methods copy.	literals _ other literals copy.	code _ other code copy]' classified: 'as yet unclassified'SymbolTable understands: 'allClasses  | s  " Smalltalk allClasses "	"return an array of all classes in me"	[ self allClassNames transform s to [selfs]]' classified: 'as yet unclassified'SymbolTable understands: 'allClassNames  | s  " Smalltalk allClassNames "	"return a sorted array of names of classes in me"	[ (self contents all s suchThat 		[selfs Is: Class])		sort]' classified: 'as yet unclassified'SymbolTable understands: 'allGlobals  | s  " Smalltalk allGlobals "	"return an array of names of non-classes in me"	[ self contents all s suchThat 		[(selfs Is: Class)false]]' classified: 'as yet unclassified'SymbolTable understands: 'allRefsTo: names from: class | n 	[[names is: Vector  []	names _ names inVector].	Smalltalk allCallsOn: (names transform [n] to [self ref: n]) from: class]' classified: 'as yet unclassified'SymbolTable understands: 'allUnsentMessages  | sent unsent c m l  "Smalltalk allUnsentMessages "	[sent _ HashSet new init: 4000.	" (SpecialOops has a false in it :-) "	for l from: (SpecialOops copy: 10 to: SpecialOops length) do		[l is: UniqueString[sent insert: l]].	for c from: self allClasses do		[for m from: c messages do			[for l from: (c md literals: m) do				[l is: UniqueString[sent insert: l]]]]	unsent _ HashSet new init: 2000.	for c from: self allClasses do		[for m from: c messages do			[(sent has: m)false[unsent insert: m]]]	unsent contents sort]' classified: 'as yet unclassified'SymbolTable understands: 'removeAllUnsentMessages  | unsent c m n 	"Smalltalk removeAllUnsentMessages. "	[n _ 999.	while n > 0 do [	unsent _ self allUnsentMessages asSet.	for m from: self unforgetableMessages do		[unsent delete: m].	n _ 0.	for c from: self allClasses do		[for m from: c messages do			[unsent has: m				[m last = ''_'' last [].				c forget: m.				n _ n + 1.				user cr; show: c title + '''' + m.				]]].	user cr; show: ''removed ''; print: n; show: '' methods.''.]	]' classified: 'as yet unclassified'SymbolTable understands: 'unforgetableMessages   "Smalltalk unforgetableMessages  "	[ (abstract aClassComment actionpic: activate adjustLines:by: allFont: allGlobals allItalic and aNote args asFullString asInt asInt32 asLowercase asNatural asObject asSet asset: base8: beAltoCursor become: beNTCursor bit: bitsFromStream: black black: blowup bravoRuns: canBeInt16 category charnearpt: checkIndex: choose classComment classified: clean clearCursor clipBy: code: color color:scale: comp: compareChar: compileAllFrom:to: compileFrom:to: copycomp: core corners ctrlKey currentFrame deactivate define:as: deleteEmptyCategories deleteI:to: describe:on: destbase destraster displayHeight: displayReflown: dist: dotproduct: dstrike dstrike eachtime:args: eachtimeAgain ed: edge: edit: effect environment eqv: errorTestWith:and: exceptionTable: execute: exp family: field: figure figure: fileStrings fillin:mode: findsuchThat findmaxx: findnon: first firstsuchThat fixedwidthfromuser: flushright follow fontset: for: forfromtobydo:args: forfromtodo:args: formUnderEdit fortodo:args: frames:tickTime: frequencies fromDisplay fromImage: frompage1 fromrectangle: fromStrike: fromStrike:stream: fromString: fullprint globalCommentItself goBaby ground ground: grow: growTo: hex4 ifthen:args: ifthenelse:args: inBase: indicativeAngle: initCompiler Initializations initView: insertall: insertI:value: insertNonDescending: instfields integerScan invert isalphanumeric isarrow isinfix isInt Isnt: isuneval isWithin: justify kbd: kern learn: leftflush line loc log: loopStmt: max maxwidth metaKey mode moveFromCat:to: names near: nearest: nest newdisp newdisploc:and: next:from: nextNumber: nextNumber: normal normalize notNil notViewed: numStack object: of:from:for: offset: on: oneToMeAsStream or packprobes padNext padNext parent perform:with: perform:with:with:with: perform:withArgs: permutationToSort picture printAll printchanges: printForget:class: product: PTR purge quitThen: quitThen:continue: random randomInit read: rebug ref: removeAllUnsentMessages rename: requestRestart rescan rotate round roundTo: runcat:to: selectchar: sentMessages setbrush setfigure: setground: shade showfitted showin: side: sideNearest: size skipwords: sourcebase sourceraster spacesize sstrike sstrike stringCopy:from:to:with:from:to: stringReplace:with:from:to:and:from:to: subError sum summation swap:with: systemRehash tablet tabletabsolute tabletrelative templates Testing text:width: today tone tool toolpic: topFrame totalsecs touched trace translateto: turtlemode: turtleTests type: unsigned untildo:args: updateFonts vec versionName veryspecial: viewer: viewRange:to: visitPrevious wait: waitnokey with:values: withEdge:at: within: withSide:at: wordposition wordposition write: writeChangedMessages: writeSources: xor: ~ )]' classified: 'as yet unclassified'SystemPane understands: 'enter 	[mySysOrgVersion = user classNames  [super enter]	window outline.	self update.	super enter]' classified: 'menu messages'UserView understands: 'classNames	[ Smalltalk allClassNames]' classified: 'class names'SymbolTable derstands: 'allClassess' unique.SymbolTable derstands: 'allNonClasses' unique.SymbolTable derstands: 'sentMessages' unique.