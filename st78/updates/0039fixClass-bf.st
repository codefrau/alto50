'Remove fieldtype from Class'Class understands: 'bytesize: t1 	[self  self realself  [self realself bytesize: t1]	instsize _ (instsize land: 8191) + [t1 = 8  [0] 16384]]' classified: 'As yet unclassified'Class understands: 'initClass 	[instsize _ self instvars length.	instsize > 256  [user notify: ''too many instance variables'']	instsize _ instsize + 1 * 2 + 8192.	self organization]' classified: 'As yet unclassified'Class understands: 'instsize 	[instsize allmask: 8192  [(instsize land: 2047) / 2 - 1]		0]' classified: 'As yet unclassified'Class understands: 'printdefon: t1 | t2   	[t1 append: self class title.	t1 append: '' new title: ''.	t1 append: title.	t1 cr.	t1 tab.	t1 append: ''subclassof: '' + [superclass  nil  [''nil'']	superclass title].	t1 cr.	t1 tab.	t1 append: ''fields: '' + myinstvars asString.	t1 cr.	t1 tab.	t1 append: ''declare: ''''''.	for t2 from: classvars contents do		[t2 = ClassOrganization  []		t1 append: t2.		t1 space].	t1 append: ''''''''.	instsize nomask: 16384 		[t1 semicrtab.		t1 append: ''bytesize: ''.		t1 print: (instsize anymask: 8192)]	[SystemOrganization has: title  [		t1 semicrtab.		t1 append: ''classified: ''; print: (SystemOrganization invert: title)]].	[environment  nil  []	for t2 from: environment do		[t1 semicrtab.		t1 append: ''sharing: '' + (Smalltalk invert: t2)]].	]' classified: 'As yet unclassified'"In Notetaker, Classes actually have only 7 inst vars"Class myinstvars_ 'title	"<String> for identification, printing"		myinstvars "<String> partnames for compiling, printing"		instsize "<Integer> for storage management"		messagedict "<MessageDict> for communication, compiling"		classvars "<Dictionary/nil> compiler checks here"		superclass "<Class> for execution of inherited behavior"		environment "<Vector of SymbolTables> for external refs"'