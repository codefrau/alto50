'Add Class>>fromuser. Rename changeset after publishing.'Class understands: 'fromuser	[self new fromuser]' classified: 'As yet unclassified'CodePane understands: 'eachtime [	user kbck [self kbd]	frame has: user mp [		user anybug [			user redbug [self redbug]			user yellowbug [self yellowbug]			user bluebug [false]]		user anykeys [self keyset]]	self outside]' classified: 'As yet unclassified'UserView understands: 'bugScreenMenu | choice w turtle i f index file	[choice _ (Menu new string:''exit to overviewrestore displayopen a subviewopen a browseropen a workspaceopen form ...tablet demoturtle demoedit file ...file in ...publish update ...load updatessave'') bug.	choice = 1 		[projectWindow  nil  []		projectWindow runParent]	choice = 2  [self restore]	choice = 3  [self schedule: ProjectWindow init]	choice = 4  [self schedule: BrowseWindow default]	choice = 5  [self schedule: (CodeWindow new class: UserView selector: workspace para: (UserView code: workspace) formerly: false)]	choice = 6  [w _ self loadFormWindow  [self schedule: w]]	choice = 7  [self schedule: (D1TopWindow new default)]	choice = 8 		[turtle _ Turtle init.		turtle color: black; width: 4; inking: oring.		for i to: 50 do [turtle go: i * 4; turn: 89]]	choice = 9 		[f _ self fileMenu: ''edit'' directory: '''' matching: ''*''			 [self editFile: f]]	choice = 10 		[f _ self fileMenu: ''file in'' directory: '''' matching: ''*.st''			 [self filin: f]]	choice = 11 		[f _ self fileMenu: ''publish'' directory: '''' matching: ''*.st''			 [file _ self fileString: f.			self fileString: (self update: f _ file) _ file.			self fileString: f _ nil]]	choice = 12  [self loadUpdates]	choice = 13 		[NoteTaker  [user save]		user quit]]' classified: 'As yet unclassified'UserView understands: 'update: fName _ contents | updates num file each  	[updates _ self updatesAvailable.	num _ (updates length + 1) asString.	while num length < 4 do [num _ ''0'' + num].	fName _ num + fName.	self fileString: (updateURL + fName) _ contents.	updates _ updates , fName.	file _ Stream default.	file append: ''Notetaker updates''.	for each from: updates do		[file cr; append: each].	self fileString: updateURL + ''updates.list'' _ file contents.	self cr; show: ''Published '' + fName.	fName]' classified: 'As yet unclassified'