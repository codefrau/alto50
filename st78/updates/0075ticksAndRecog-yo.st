Class new title: D1Stroke	subclassof: Object	fields: ' name points isLong'	declare: '';	classified: 'D1Recognizer'D1Recognizer understands: 'recognize: ps | stroke	[stroke _ D1Stroke new points: ps.	stroke preProcess.	[stroke isLong  [ (''line'' 1.0)]].	self recognize: stroke against: templates in: 250.0]' classified: 'As yet unclassified'D1Stroke understands: 'arctan: aFloat	[ aFloat arctan]' classified: 'As yet unclassified'D1Stroke understands: 'isLong	[ isLong]' classified: 'As yet unclassified'D1Stroke understands: 'isSkinny: ps | max min t end begin p pi i	[end _ ps last.	begin _ ps  1.	pi _ 3.141592653589793.	max _ pi.	min _ max negated.	for i from: 1 to: ps length do [		[i  (ps length / 2)  [p _ end - (ps  i)]		true  [p _ (ps  i) - begin]].		t _ p theta.		[t > (pi * 1.5)  [t _ t - (pi * 2.0)]].		max _ max max: t.		min _ min min: t].	 (max - min) < 0.17453293]' classified: 'As yet unclassified'D1Stroke understands: 'preProcess | radians i	[points _ self resample: points with: 64.	points _ self translate: points to: 0  0.	radians _ self indicativeAngle: points.	points _ self rotate: points by: radians.	points _ self scale: points to: 250.0.	isLong _ self isSkinny: points]' classified: 'As yet unclassified'D1Window understands: 'redbug | a last current t center	[a _ Stream new of: (Vector new: 20).	center _ user screenrect center.	last _ user mp.	a next _ last.	t _ Turtle new.	t color: black.	t init.	t penup.	t goto: last - center.	t pendn.	while user redbug do [		current _ user mp.		[last  current  [			a next _ current.			t goto: current - center.			last _ current]]].	[nil  result and [a contents length > 1]  [result text: (recognizer recognize: a contents) asString]].	self show]' classified: 'As yet unclassified'UserView understands: 'ticks 	[mem  280] primitive: 102' classified: 'As yet unclassified'