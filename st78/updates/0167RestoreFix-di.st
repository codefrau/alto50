CodePane understands: 'windowenter 	[self outline.	parednil  []	pared enter]'PanedWindow understands: 'show | p	[super show.	bits  nil  []	for p from: panes do		[p windowenter; windowleave]]'SymbolTable understands: 'allImplementersOf: selector  | c cc ccc  "Smalltalk allImplementersOf:  "	[ ((user classNames transform c to [Smalltalkc])		all cc suchThat [(cc Is: Class) and (cc md has: selector)])		transform ccc to ccc title	]'NotifyWindow understands: 'enter | t1 t2 t3 t4 t5 t6 	[enoughpanes  [super enter]	NotifyFlag _ false.	t1 _ panes  1.	t2 _ CodePane new.	t3 _ VariablePane new.	t4 _ CodePane new.	t5 _ VariablePane new.	t6 _ CodePane new.	self title: title with: t1 , t2 , t3 , t4 , t5 , t6 at: bigTemplates.	self frame: frame.	t1 context: t3 instance: t5 code: t2.	t2 from: t1.	t3 to: t4.	t4 from: t3.	t5 to: t6.	t6 from: t5.	t1 select: 0.	t1 deselected.	t1 makeParagraph.	t1 fill.	self show.	NotifyFlag _ true.	enoughpanes _ NotifyFlag]'SymbolTable derstands: 'allImplementorsOf:' unique.SymbolTable derstands: 'implementorsOf:' unique.