'Reorder AnimWindow menu. Also, shift-next goes to previous project'AnimWindow understands: 'yellowbug | choices choice	[choices _ (''step'' ''repaint'' ''dst _ src'' ''dst or src'' ''dst xor src'' ''dst and src''		''dst _ ~src'' ''dst or ~src'' ''dst xor ~src'' ''dst and ~src'' ''reflow'') copy.	choice _ effect + 3.	choiceschoice _ '' '' + (choiceschoice) + ''  ''.	[self style: reflow  [choices11 _ '' '' + (choices11) + ''  '']].	choice _ self doNotTickDuring [(Menu new stringFromVector: choices) bug].	choice = 0  []	choice = 1  [self showNextFrame]	choice = 2  [form edit]	choice = 11  [self style: reflow _ (self style: reflow)  false. self frame: frame. user restore]	effect _ choice - 3.	(effect land: 3)  0  "set transparent fill"		[[(self style: fill) = white  [self style: fill _ nil]].		user restore: frame]	self show]' classified: 'as yet unclassified'UserView understands: 'bugScreenMenu | m w turtle i f index file	[m _ 0.	screenMenu bug	= (m_m+1)  [projectWindow runParent];	= (m_m+1)  [user shiftKey  [projectSequencer visitPrevious] projectSequencer visitNext];	= (m_m+1)  [self restore];	= (m_m+1)  [self schedule: ProjectWindow init];	= (m_m+1)  [self schedule: ProjectSorter init];	= (m_m+1)  [self schedule: BrowseWindow default];	= (m_m+1)  [self schedule: (CodeWindow new class: UserView selector: workspace para: (UserView code: workspace) formerly: false)];	= (m_m+1)  [w _ self loadFormWindow  [self schedule: w enter]];	= (m_m+1)  [user schedule: ArrowWindow default];	= (m_m+1)  [user schedule: RectWindow default];	= (m_m+1)  [user schedule: EllipseWindow default];	= (m_m+1)  [user schedule: StarWindow default];	= (m_m+1)  [self schedule: D1TopWindow default];	= (m_m+1) 		[turtle _ Turtle init.		turtle color: black; width: 4; inking: oring.		for i to: 50 do [turtle go: i * 4; turn: 89]];	= (m_m+1) 		[f _ self fileMenu: ''edit'' directory: '''' matching: ''*''			 [self editFile: f]];	= (m_m+1) 		[f _ self fileMenu: ''file in'' directory: '''' matching: ''*.st''			 [self filin: f]];	= (m_m+1) 		[f _ self fileMenu: ''file delete'' directory: '''' matching: ''*''			 [self confirm: ''Really delete '' + f  [self fileString: f _ nil]]];		= (m_m+1) 		[f _ self fileMenu: ''publish'' directory: '''' matching: ''*.st''			 [file _ self fileString: f.			self fileString: (self update: f _ file) _ file.			self fileString: f _ nil]];	= (m_m+1)  [self loadUpdates];	= (m_m+1)  [user save]]' classified: 'as yet unclassified'UserView understands: 'topWindow 	[sched length = 0  [false]	sched  1]' classified: 'as yet unclassified'Window understands: 'bluebug  | str 	[(self doNotTickDuring windowmenu bug)		=1[exitflag _ false];		=2[self newframe; enter];		=3[self closeAndUnschedule. false];		=4[self styleEdit];		=5[self hardcopy];		=6[ self duplicate];		=7[str _ user request: ''New Title? ''. titlepara _ str asParagraph allBold];		=8[self style: ticking _ true];		=9[self style: ticking _ false];		=10[self inspect]]' classified: 'as yet unclassified'Window understands: 'doNotTickDuring doit | wasTicking value	[wasTicking _ self style: ticking.	if wasTicking then [self style: ticking _ false].	value _ doit eval.	if wasTicking then [self style: ticking _ true].	value]'