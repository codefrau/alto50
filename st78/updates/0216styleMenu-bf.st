'Nicer menu for window style'Menu understands: 'string: str | pt para 	[[str last  13  [str _ str + '''']].	para _ str asParagraph.	pt _ [text  nil  [00] text frame origin].	text _ Textframe new para: para frame: (Rectangle new origin: pt corner: 1000  1000).	pt _ text maxx: str length + 1.	text frame growto: pt + (40).	text measureall.	para center.	frame _ text frame inset: 22.	thisline  nil 		[thisline _ Rectangle new origin: text frame origin corner: text frame corner xtext lineheight]]'Object understands: 'nonliteral	[self  nil  [nil]	self  false  [false]	self  true  [true]]'Window understands: 'bluebug  | str 	[windowmenu bug		=1[exitflag _ false];		=2[self newframe; enter];		=3[self close. user unschedule: self. self restore. self leave. false];		=4[self styleEdit];		=5[self hardcopy];		=6[ self duplicate];		=7[str _ user request: ''New Title? ''. titlepara _ str asParagraph allBold];		=8[self style: ticking _ true];		=9[self style: ticking _ false];		=10[self inspect]]'Window understands: 'classInit   "Window classInit" 	[border _ 22.	titleframe _ Textframe new para: ''ignore'' asParagraph frame: (5050 rect: 100100).	titleloc _ 3(4 - titleframe lineheight).	titlerun _ String new: 2.	titlerun word: 1 _ 255.	(defaultStyle _ Dictionary new: 4)		insert: fill with: white;		insert: borderWidth with: 2;		insert: borderColor with: black.	windowmenu _ Menu new string:''to bottomframeclosestyleprintduplicatenew titlestart tickingstop tickinginspect'']'Window understands: 'styleEdit | menu items item i val mark 	[menu _ Menu new.	while true do [		items _ Stream default.		for item from: (			(noTitle true ''no title'')			('''')			(fill nil ''no fill'')			(fill black ''black'')			(fill dkgray ''dark gray'')			(fill gray ''medium gray'')			(fill ltgray ''light gray'')			(fill white ''white'')			('''')			(noBorder true ''no border'')			(noBorder false borderWidth 1 ''1 px'')			(noBorder false borderWidth 2 ''2 px'')			(noBorder false borderWidth 4 ''4 px'')			(noBorder false borderWidth 8 ''8 px'')			(noBorder false borderWidth 16 ''16 px'')			(noBorder false borderColor black ''black'')			(noBorder false borderColor dkgray ''dark gray'')			(noBorder false borderColor gray ''medium gray'')			(noBorder false borderColor ltgray ''light gray'')			(noBorder false borderColor white ''white'')			('''')			('' done '')		) do [[item length > 1 				[mark _ true.				for i from: 1 to: item length - 1 by: 2 do [					val _ item(i + 1).					val _ [Smalltalk has: val  [Smalltalkval] val nonliteral].					(self style: itemi)  val  [mark _ false]].				mark  [items append: '' '']]].			items append: item last; cr].		(menu string: items contents) fbug		= 0  [self];		= 1  [self style: noTitle _ (self style: noTitle)  false. user restore];			= 3  [self style: fill _ [(self style: fill)  nil  [white] nil]. user restore];		= 4  [self style: fill _ black. self enter];		= 5  [self style: fill _ dkgray. self enter];		= 6  [self style: fill _ gray. self enter];		= 7  [self style: fill _ ltgray. self enter];		= 8  [self style: fill _ white. self enter];			= 10 [self style: noBorder _ (self style: noBorder)  false. user restore];		= 11 [self style: noBorder _ false. self style: borderWidth _ 1. user restore];		= 12 [self style: noBorder _ false. self style: borderWidth _ 2. user restore];		= 13 [self style: noBorder _ false. self style: borderWidth _ 4. user restore];		= 14 [self style: noBorder _ false. self style: borderWidth _ 8. user restore];		= 15 [self style: noBorder _ false. self style: borderWidth _ 16. user restore];		= 16 [self style: noBorder _ false. self style: borderColor _ black. self show];		= 17 [self style: noBorder _ false. self style: borderColor _ dkgray. self show];		= 18 [self style: noBorder _ false. self style: borderColor _ gray. self show];		= 19 [self style: noBorder _ false. self style: borderColor _ ltgray. self show];		= 20 [self style: noBorder _ false. self style: borderColor _ white. self show];			= 22 [self]]]'UniqueString derstands: 'nonliteral' unique.Window classInit