BitBlt understands: 'sourceFont_ font 	[source _ font.	sourceraster _ font raster.	sourcebase _ font glyphs]'BitBlt understands: 'sourceForm_ t1 	[source _ t1.	sourceraster _ source width + 15 / 16.	sourcefield _ source height + 1 / 2 * sourceraster.	sourcebase _ source bits]'TextScanner understands: 'emphasize: code leftx: leftX rightx: rightX liney: lineY | lineHeight t6 	[code = 0  []	"codes: 8=strikeout, 4=underline, 2=italic, 1=bold"	[font  nil or font height = style lineheight  []	[font ascent < style baseline 		[lineHeight _ lineY + (style baseline - font ascent).		(leftX  lineY rect: rightX  lineHeight) clear: white]].	font descent < (style lineheight - style baseline) 		[lineHeight _ lineY + (style baseline + font descent).		t6 _ lineHeight + (style lineheight - (style baseline + font descent)).		(leftX  lineHeight rect: rightX  t6) clear: white]].	[code  8 		[code _ code - 8.		lineHeight _ lineY + (style baseline / 2).		(leftX  lineHeight rect: rightX  (lineHeight + 1)) clear: black]].	[code  4 		[code _ code - 4.		lineHeight _ lineY + style baseline.		(leftX  lineHeight rect: rightX  (lineHeight + 1)) clear: black]].	[code  2 		[code _ code - 2.		lineHeight _ lineY + style lineheight - 4.		until lineHeight  lineY do			[(leftX  lineY rect: rightX - 1  lineHeight) blt: leftX + 1  lineY mode: storing.			(leftX  lineY rect: leftX + 1  lineHeight) clear: white.			lineHeight _ lineHeight - 4]]].	code  1 		[code _ code - 1.		(leftX  lineY rect: rightX  (lineY + style lineheight)) blt: leftX + 1  lineY mode: oring]]'TextScanner understands: 'scanline: line at: lineY stopx: sx stopchar: stopChar | nullChar xOfLastSpace stopCode empahsis runAndVal endOfRun padding relX tabsize spacePad alignment 	[stopx _ sx.	chari _ line starti - 1.	spacecount _ line spaces.	padding _ line padwidth.	destx _ spacex _ xOfLastSpace _ frame minX.	spacePad _ charpad _ empahsis _ 0.	tabsize _ style tabsize.	spacei _ 1.	alignment _ para alignment.	[alignment = 0  []	alignment = 1 		[spacecount > 0 			[charpad _ padding / (line stopi - chari + spacecount).			[charpad > 0 				[padding _ padding - (charpad * (line stopi - chari - 2 - spacecount)).				printing  [(frame minX  lineY rect: frame maxX  (lineY + style lineheight)) clear: white]]].			spacePad _ padding / spacecount.			spacecount _ spacecount - (padding \ spacecount)]]	alignment = 2  [destx _ destx + (padding / 2)]	alignment = 4  [destx _ destx + padding]].	stopCode _ 10.	until stopCode < 10 do		[stopCode = 10 			[stopCode _ 255.			chari  stopChar  [stopCode _ 3]			[printing  [self emphasize: empahsis leftx: xOfLastSpace rightx: destx liney: lineY]].			xOfLastSpace _ destx.			chari _ chari + 1.			runAndVal _ para runAndVal: chari.			empahsis _ runAndVal  2 land: 15.			endOfRun _ runAndVal  1 + chari - 1 min: stopChar.			self setfont: (runAndVal  2 lshift: 4) liney: lineY]		stopCode _ self scanword: endOfRun.		stopCode > 10 			[[stopCode = 12 				[spacecount _ spacecount - 1.				[spacecount = 0  [spacePad _ spacePad + 1]].				spacei _ chari.				spacex _ destx.				width _ spacesize + spacePad.				printing 					[function _ 28.					self callBLT]]			stopCode = 13 				[relX _ destx - frame minX.				width _ [para alignment > 0  [tabsize + charpad]						relX + tabsize | tabsize - relX].				printing 					[function _ 28.					self callBLT]]			[stopCode = 11  [nullChar _ maxascii + 1]].			sourcex _ xtable  (nullChar + 1).			width _ xtable  (nullChar + 2) - sourcex.			[printing 				[function _ 16.				self callBLT]].			width _ width + charpad].			destx _ destx + width.			destx > stopx  [stopCode _ 2]			chari  endOfRun  [stopCode _ 10]			chari _ chari + 1]		stopCode = 4  [width _ 0]].	printing  [self emphasize: empahsis leftx: xOfLastSpace rightx: destx liney: lineY]]'TextScanner understands: 'setfont: t1 liney: t2 	[t1 = fontno  [desty _ t2 + style baseline - font ascent]	fontno _ t1.	font _ style font: fontno.	xtable _ font xtable.	spacesize _ font spacewidth.	minascii _ font minascii.	maxascii _ font maxascii.	kern _ font kern.	[kernnil[kern _ 0]].	self sourceFont _ font.	printing 		[desty _ t2 + style baseline - font ascent.		height _ font height]]'