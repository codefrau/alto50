'The basic project sorter.  Not active yet.'Class new title: ProjectPane	subclassof: ListPane	fields: 'sorter'	declare: '';	classified: 'Panes and Menus'Class new title: ProjectSorter	subclassof: PanedWindow	fields: 'namesInOrder current'	declare: 'stdTemplates ';	classified: 'Windows'ProjectPane understands: 'redbug | sel pane dragSel	[sel _ ((self lineofy: user mp y) max: 1) - 1.	sel = selection  [self select: 0.   user waitnobug]	self select: sel.	while (user anybug and (window has: user mp)) do		[dragSel _ ((self lineofy: user mp y) max: 1) - 1.		dragSel = sel or: dragSel = 0[].		[dragSel > sel "we just flip two entries at at time"			[dragSel _ sel+1]			dragSel _ sel-1].		list swap: sel with: dragSel.		self of: list.		sel _ dragSel.		self select: sel]	self compselection.	self select: 0.	sorter namesInOrder: list]' classified: 'As yet unclassified'ProjectPane understands: 'sorter: s [sorter _ s]' classified: 'As yet unclassified'ProjectPane understands: 'yellowbug | editmenu	[editmenu _ Menu new string: ''install''.	scrollBar hidewhile 		[editmenu bug			= 1  [Smalltalk declare: projectSequencer as: sorter]]	]' classified: 'As yet unclassified'ProjectSorter understands: 'enter | projects nowNames newNames n p	[super enter.	self validateNames.	panes1 of: namesInOrder]' classified: 'As yet unclassified'ProjectSorter understands: 'init | pane p projects	"user schedule: (ProjectSorter new init)."	[pane _ ProjectPane new.	self title: ''ProjectSorter'' with: pane inVector at: stdTemplates.	self newframe.	self show.	projects_ self allProjects.	namesInOrder _ projects transform p to [p title].	pane of: namesInOrder.	pane sorter: self]' classified: 'As yet unclassified'ProjectSorter understands: 'namesInOrder: names	[namesInOrder _ names]' classified: 'As yet unclassified'ProjectSorter understands: 'validateNames | projects nowNames newNames n p	[projects _ self allProjects.	nowNames _ projects transform p to [p title].	"Remove old names and add new names to namesInOrder"	namesInOrder _ namesInOrder all n suchThat [nowNames has: n].	newNames _ nowNames all n suchThat [(namesInOrder has: n)  false].	namesInOrder _ namesInOrder concat: newNames]' classified: 'As yet unclassified'ProjectSorter understands: 'visit: indexInNames | index p	[self validateNames.	index _ (indexInNames max: 1) min: namesInOrder length.	p _ self allProjects find p suchThat [p title = namesInOrderindex].	p Is: ProjectWindow		[current _ namesInOrderindex.		p install]]' classified: 'As yet unclassified'ProjectSorter understands: 'visitNext	[self visit: (namesInOrder find: current) + 1]' classified: 'As yet unclassified'ProjectSorter understands: 'visitPrevious	[self visit: (namesInOrder find: current) - 1]' classified: 'As yet unclassified'ProjectWindow understands: 'putTitle 	[true[ self].  "Not visible now so why bother"	[titlepara  nil  [titlepara _ ''Top View'' asParagraph allBold]].	titleframe put: titlepara centered: user screenrect extent x / 3  8.	titleframe outline]' classified: 'As yet unclassified'UserView understands: 'allWindowsAddTo: strm | w 	"Recursively visit all userviews collecting windows"	[for w from: sched do		[w Is: Window 			[strm next_ w.			w Is: ProjectWindow 				[w userview allWindowsAddTo: strm]]]	]		' classified: 'As yet unclassified'UserView understands: 'allWindowsInAllProjects | root winStrm 	[root _ self rootUserview.	winStrm _ Stream new of: (Vector new: 50).	winStrm next_ root projectWindow.	root allWindowsAddTo: winStrm.	 winStrm contents]' classified: 'As yet unclassified'ProjectWindow classInit.