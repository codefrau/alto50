Class new title: D1Recognizer	subclassof: Object	fields: ' templates pointsCache'	declare: 'default';	classified: 'D1Recognizer'ArrowWindow understands: 'init	[self style: hasHead _ true.	super init]'ArrowWindow understands: 'setBounds: rect	[self init.	self style: beginPoint _ rect origin x  rect corner y.	self style: endPoint _ rect corner x  rect origin y.	frame _ self updateFrame]'D1Recognizer understands: 'default	[[default  nil  [default _ self initTemplates]].	 default]'D1Recognizer understands: 'recognizeStroke: stroke | theta ps	[ps _ stroke points.	stroke preProcess.	pointsCache _ Dictionary new: 10.	[stroke isLong  [		theta _ stroke theta: (Point new x: (ps last x asFloat - (ps  1) x asFloat)								y: (ps last y asFloat - (ps  1) y asFloat)).		 ''line'', theta]].	self recognize: stroke against: templates in: 250.0]'D1TextPane understands: 'init	[super init.	"recognizer _ D1Recognizer new.	recognizer initTemplates."	pen _ Turtle init.	pen batch: false.	pen color: dkgray.	pen width: 4]'D1TextPane understands: 'recognize | a last current r	[a _ Stream new of: (Vector new: 20).	last _ user mp.	a next _ last.	pen penup.	pen goto: last.	pen pendn.	while user redbug do [		current _ user mp.		[last  current  [		a next _ current.		pen goto: current.		last _ current]]].	[a contents length > 1  [		r _ self recognizer recognize: a contents.		[(r  1) = ''line''  [self handleLineGesture: r stroke: a contents]		self handleGesture: r stroke: a contents]]	self handleClick: a contents  1].	self show]'D1TextPane understands: 'recognizer	[ D1Recognizer new default]'EllipseWindow understands: 'setBounds: rect	[self init.	self style: topPoint _ rect center x  rect origin y.	self style: rightPoint _ rect corner x  rect center y.	frame _ self updateFrame]'RectWindow understands: 'setBounds: rect	[self init.	self style: beginPoint _ rect origin.	self style: endPoint _ rect corner.	frame _ self updateFrame]'ShapeWindow understands: 'setBounds: rect	[self init.	frame _ self updateFrame]'StarWindow understands: 'setBounds: rect | max	[self init.	max _ rect width max: rect height.	self style: centerPoint _ rect origin + ((max  max) / 2).	self style: firstPoint _ rect origin x  (rect origin y + (max asFloat * 0.34)) asInteger.	frame _ self updateFrame]'UserView understands: 'recognize | stroke result	[RecogCursor showwhile [		while user shiftKey do [			user redbug  [				stroke _ D1Stroke fromuser.				stroke  [self recognizeStroke: stroke]]]]]'UserView understands: 'recognizer	[ D1Recognizer new default]'UserView understands: 'recognizeStroke: stroke | result ps cls	[ps _ stroke points.	stroke preProcess.	result _ self recognizer recognizeStroke: stroke.	[(result  1)		= ''star''  [cls _ StarWindow];		= ''circle''  [cls _ EllipseWindow];		= ''arrow''  [cls _ ArrowWindow]].	[nil  cls  [		user schedule: (cls new setBounds: (Rectangle new encompass: ps))]]]'ArrowWindow derstands: 'default' unique.