BitRect understands: 'filout | strm  "store in asset directory"	[strm _ Stream default.	self filoutOn: strm.	user fileString: updateURL + title + ''.pic'' _ strm contents]'BitRect understands: 'filoutOn: f |  i  "write bits on a file or stream"	[f nextword _ self extent x.	f nextword _ self extent y.	f nextword _ stripheight.	for i from: data do [f append: i].	]'BitRect understands: 'title: str in: rect | nStrips i strips	[title _ str.	origin_rect origin.  corner_rect corner.	"the strip height is chosen so that each bitstring is about 2048 bytes"	stripheight_1023/((self extent x + 15)/16).	nStrips_(self extent y+stripheight-1)/stripheight.	data_Vector new: nStrips.	strips_self strips.	for i to: nStrips do		[datai_String new: (stripsi) bitStringLength]]'BitRectEditor understands: 'classInit | t i  "BitRectEditor classInit." 	[t _ Vector new: 6.	for i to: t length do [ti _ BitRectTool new init].	tools _ (RadioButtons new) vec: t at: 00 width: 20.	windowmenu _ Menu new string: ''undermovegrowclosefiloutprintbitsinspectinspect toolinspect pencil''.	actionpic_ BitRect new filin: updateURL + ''actionpic''.	toolpic_ BitRect new filin: updateURL + ''toolpic''."	user fileString: updateURL + ''toolpic''""	toolpic_ BitRect new filin: updateURL + ''toolpic''.
""	(Form new extent: 20120) white displayat: 00 effect: storing.	toolpic_BitRect new title: ''toolpicnot'' in: (00 rect: 20120).		toolpic saveScreenBits."	self initmenu1]'BitRectTool understands: 'line | start end saveMode	[start_end_self mpOnGrid.	saveMode _ pencil function.	pencil width: [penwidth  nil[2] penwidth]; color: black; inking: xoring.	while user redbug do		[end_self mpOnGrid.		pencil place: start; goto: end; place: start; goto: end].	pencil color: tone; inking: mode; place: start; goto: end]'BitRectEditor classInit