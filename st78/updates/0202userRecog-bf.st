'Invoke recognizer by shift-click on desktop'D1Stroke understands: 'classInit 	[Smalltalk declare: RecogCursor as: (Cursor new fromtext: ''0000000000000000000000000000000000000000000000000000000000000000000000011000000000000011110000000000011111100000000011111111000000001111111100000000011111100000000000111100000000000001100000000000000000000000000000000000000000000000000000000000000000000000'' offset: 8  8)]'D1Stroke classInitD1Stroke understands: 'fromuser | bits pen a last current	[pen _ Turtle init.	pen color: dkgray.	pen width: 4.	a _ Stream new of: (Vector new: 20).	last _ user waitbug.	a next _ last.	bits _ user screenrect bitsIntoString.	pen place: last.	while user redbug do [		current _ user mp.		[last  current  [		a next _ current.		pen goto: current.		last _ current]]].	user screenrect bitsFromString: bits.	a contents length  1  [false]	self points: a contents]'D1TextPane understands: 'eachtime [	user kbck [self kbd]	frame has: user mp [		user shiftKey  [			RecogCursor showwhile [				while user shiftKey do [					user redbug  [self recognize]]]]		user anybug [			user redbug [self redbug]			user yellowbug [self yellowbug]			user bluebug [false]]		user anykeys [self keyset]]	self outside]'UserView understands: 'recognize | stroke 	[RecogCursor showwhile [		while user shiftKey do [			user redbug  [				stroke _ D1Stroke fromuser.				stroke  ["Recognizer recognize: stroke"]]]]]'UserView understands: 'run: topFlag | i w forward	"topFlag means sched1 already is awake"	[forward _ [topFlag [w_sched1. while w eachtime do []. w lasttime] true].	while true do		[i_0.		[forward or sched length = 0  [beTopWindow _ nil]			self toBottom: w.			beTopWindow _ sched1].		until [(i_i+1) > sched length[]			w _ schedi.			w inactive  [false]			w firsttime] do [self runTicks]		i>sched length		"check for bug in empty space"			[user yellowbug[self bugScreenMenu].			user shiftKey[self recognize]]		sched promote: w.		while w eachtime do [self runTicks]		forward_ w lasttime]]'D1TextPane derstands: 'clearCursor' unique.D1TextPane derstands: 'crossHairCursor' unique.D1TextPane classvars has: CrossHairCursor	 [D1TextPane classvars delete: CrossHairCursor].D1Stroke classInit