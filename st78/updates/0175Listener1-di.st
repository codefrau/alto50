TextImage understands: 'doit: forListener  | result strm c2s s	"Listener wants CR, prompt;  cmd-D wants space and select result"	["if null selection, extend to prompt or current line"	self selectLine.	c2s _ c2.	user print: c1; space; print: c2; print: self selectionAsStream rest; show: ''.''.	"evaluate the selection"	result _ Generator new evaluate: self selectionAsStream in: false to: nil notifying: self.	"add a space and print the result with cr"	strm _ Stream default.	strm space; print: result; cr.	self select: c2s.	user cr; print: c1; space; print: c2.	self paste: strm contents.	user cr; print: c1; space; print: c2; show: ''.''.	self select: c2.	]'TextImage understands: 'kbd | typed key 	[c1 < c2 and self checklooks  []	typed _ Set new string: 16.	[begintypein  []	Deletion _ self selection.	begintypein _ c1].	while [key _ user kbdnext.	key] do		[key = bs 			[c1 < c2  [] "deleting selection happens below"			typed empty 				[c1 _ 1 max: c1 - 1.				begintypein _ begintypein min: c1]			typed skip: 1]		key = cut  [self copyselection] "because mapped to cmd-c"		key = paste 			[self replace: typed.			begintypein _ c1 _ c2.			self paste]		key = ctlw 			[ [typed empty  [] self replace: typed. typed reset. c1 _ c2].			c1 _ 1 max: c1 - 1.			while (c1 > 1 and (para  (c1 - 1)) tokenish) do				[c1 _ c1 - 1].			begintypein _ begintypein min: c1]		key = esc 			[ [typed empty  [] self replace: typed. typed reset. c1 _ c2].			self fintype.			c1 _ c2 - Scrap length.			self complement]		key = 30   "doit"			["flush typeahead"			[typed empty  [] self replace: typed. typed reset. c1 _ c2].			self doit: true]		typed next_ key].	self replace: typed.	c1 _ c2.	self selectAndScroll]'TextImage understands: 'selectLine 	[ "Extend the current selection back to CR or prompt,		and forward to the end of the line or text"	c1 _ 1 max: c1 - 1.	until (c1 = 1 or ((para(c1-1)=13) or: (para(c1-1)=13))) do		[c1 _ c1 - 1].	c2 _ para length+1 min: c1.	until (c2 = (para length+1) or parac2=13) do		[c2 _ c2 + 1].	]'